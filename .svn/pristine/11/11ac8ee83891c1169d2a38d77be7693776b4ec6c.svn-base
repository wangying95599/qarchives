package org.quetzaco.archives.web.restful;

import com.github.pagehelper.PageInfo;
import org.quetzaco.archives.application.biz.HomePageService;
import org.quetzaco.archives.model.HomePage;
import org.quetzaco.archives.model.api.APIEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.Date;
import java.util.List;

@RestController
@RequestMapping("/homePage")
public class HomePageController extends BaseRestContoller {

  @Autowired
  HomePageService homePageService;


  @RequestMapping(value = "/link", method = RequestMethod.POST)
  public HttpEntity<APIEntity<?>> Link(@RequestParam("content") String textarea) {
      String type = "link";
    homePageService.insert(textarea, type);
    return buildEntity(APIEntity.create(null), HttpStatus.OK);

  }

  @RequestMapping(value = "/information", method = RequestMethod.POST)
  public HttpEntity<APIEntity<?>> information(@RequestParam("content") String textarea) {
      String type = "information";
    homePageService.insert(textarea, type);
    return buildEntity(APIEntity.create(null), HttpStatus.OK);
  }


  @RequestMapping(value = "/getLink", method = RequestMethod.GET)
  public HttpEntity<APIEntity<PageInfo>> getLink(@RequestParam(value = "pageNum", required = false, defaultValue = "1") int pageNum,
                                                 @RequestParam(value = "pageSize", required = false, defaultValue = "100") int pageSize) {
      return buildEntity(APIEntity.create(homePageService.getLink(pageNum, pageSize)), HttpStatus.OK);
  }

  @RequestMapping(value = "/getInformation", method = RequestMethod.GET)
  public HttpEntity<APIEntity<PageInfo>> getInformation(@RequestParam(value = "pageNum", required = false, defaultValue = "1") int pageNum,
                                                        @RequestParam(value = "pageSize", required = false, defaultValue = "100") int pageSize) {
      return buildEntity(APIEntity.create(homePageService.getInformation(pageNum, pageSize)), HttpStatus.OK);
  }

    @RequestMapping(value = "/update", method = RequestMethod.PUT)
    public HttpEntity<APIEntity> updateContent(HomePage homePage) {
        homePage.setUpdateDt(new Date());
        homePageService.updateContent(homePage);
        return buildEntity(APIEntity.create(homePage), HttpStatus.OK);
    }

    @RequestMapping(value = "/delete", method = RequestMethod.PUT)
    public HttpEntity<APIEntity> deleteHomePage(@RequestParam("ids[]") List<Long> list) {
        homePageService.deleteHomePage(list);
        return buildEntity(APIEntity.create(null), HttpStatus.OK);
    }



}
