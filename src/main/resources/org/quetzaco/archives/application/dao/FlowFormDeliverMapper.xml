<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.quetzaco.archives.application.dao.FlowFormDeliverMapper">
  <resultMap id="BaseResultMap" type="org.quetzaco.archives.model.FlowFormDeliver">
    <result column="flow_id" jdbcType="BIGINT" property="flowId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="deliver_user" jdbcType="VARCHAR" property="deliverUser" />
    <result column="receive_user" jdbcType="BIGINT" property="receiveUser" />
    <result column="deliver_office" jdbcType="VARCHAR" property="deliverOffice" />
    <result column="deliver_dept_id" jdbcType="BIGINT" property="deliverDeptId" />
    <result column="receive_dept_id" jdbcType="BIGINT" property="receiveDeptId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="record_flag" jdbcType="VARCHAR" property="recordFlag" />
  </resultMap>
  <resultMap id="WithFlowsResultMap" type="org.quetzaco.archives.model.FlowFormDeliver" extends="BaseResultMap">
    <association property="flows" resultMap="org.quetzaco.archives.application.dao.FlowsMapper.BaseResultMap"/>
    <association property="deliverDept" column="deliver_dept_id" select="org.quetzaco.archives.application.dao.DeptMapper.selectByPrimaryKey"/>
    <association property="receiveDept" column="receive_dept_id" select="org.quetzaco.archives.application.dao.DeptMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    flow_id, title, deliver_user, receive_user, deliver_office, deliver_dept_id, receive_dept_id, 
    description, record_flag
  </sql>
  <sql id="With_Flows_Column_List">
    ffd.flow_id, ffd.title, ffd.deliver_user, ffd.receive_user, ffd.deliver_office, ffd.deliver_dept_id, ffd.receive_dept_id,
    ffd.description, ffd.record_flag,f.id, f.type, f.status, f.result, f.created_dt, f.dead_line, f.end_dt,f.created_by
  </sql>
  <select id="selectByExample" parameterType="org.quetzaco.archives.model.FlowFormDeliverExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flow_form_deliver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.quetzaco.archives.model.FlowFormDeliverExample">
    delete from flow_form_deliver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.quetzaco.archives.model.FlowFormDeliver">
    insert into flow_form_deliver (flow_id, title, deliver_user, 
      receive_user, deliver_office, deliver_dept_id, 
      receive_dept_id, description, record_flag
      )
    values (#{flowId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{deliverUser,jdbcType=VARCHAR}, 
      #{receiveUser,jdbcType=BIGINT}, #{deliverOffice,jdbcType=VARCHAR}, #{deliverDeptId,jdbcType=BIGINT}, 
      #{receiveDeptId,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{recordFlag,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.quetzaco.archives.model.FlowFormDeliver">
    insert into flow_form_deliver
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        flow_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="deliverUser != null">
        deliver_user,
      </if>
      <if test="receiveUser != null">
        receive_user,
      </if>
      <if test="deliverOffice != null">
        deliver_office,
      </if>
      <if test="deliverDeptId != null">
        deliver_dept_id,
      </if>
      <if test="receiveDeptId != null">
        receive_dept_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="recordFlag != null">
        record_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        #{flowId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="deliverUser != null">
        #{deliverUser,jdbcType=VARCHAR},
      </if>
      <if test="receiveUser != null">
        #{receiveUser,jdbcType=BIGINT},
      </if>
      <if test="deliverOffice != null">
        #{deliverOffice,jdbcType=VARCHAR},
      </if>
      <if test="deliverDeptId != null">
        #{deliverDeptId,jdbcType=BIGINT},
      </if>
      <if test="receiveDeptId != null">
        #{receiveDeptId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="recordFlag != null">
        #{recordFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.quetzaco.archives.model.FlowFormDeliverExample" resultType="java.lang.Long">
    select count(*) from flow_form_deliver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flow_form_deliver
    <set>
      <if test="record.flowId != null">
        flow_id = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverUser != null">
        deliver_user = #{record.deliverUser,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUser != null">
        receive_user = #{record.receiveUser,jdbcType=BIGINT},
      </if>
      <if test="record.deliverOffice != null">
        deliver_office = #{record.deliverOffice,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverDeptId != null">
        deliver_dept_id = #{record.deliverDeptId,jdbcType=BIGINT},
      </if>
      <if test="record.receiveDeptId != null">
        receive_dept_id = #{record.receiveDeptId,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.recordFlag != null">
        record_flag = #{record.recordFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flow_form_deliver
    set flow_id = #{record.flowId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      deliver_user = #{record.deliverUser,jdbcType=VARCHAR},
      receive_user = #{record.receiveUser,jdbcType=BIGINT},
      deliver_office = #{record.deliverOffice,jdbcType=VARCHAR},
      deliver_dept_id = #{record.deliverDeptId,jdbcType=BIGINT},
      receive_dept_id = #{record.receiveDeptId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      record_flag = #{record.recordFlag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="getTurnOverFromMe" resultMap="WithFlowsResultMap">
    SELECT <include refid="With_Flows_Column_List"/> from flow_form_deliver  ffd join flows f on ffd.flow_id = f.id AND f.created_by=#{id} order by created_dt desc
  </select>
  <select id="getTurnOverToMe" parameterType="Map" resultMap="WithFlowsResultMap">
    select
    <include refid="With_Flows_Column_List"/>
    FROM flow_form_deliver ffd INNER JOIN flows f on ffd.flow_id = f.id and f.record_flag = TRUE
    and ffd.record_flag = '00'
    <choose>
      <when test="type!=null and type =='00'">
        and(exists(select 1 from flow_nodes a WHERE assignee_id = #{usrId,jdbcType=BIGINT} AND a.flow_id = f.id)
        or exists(select 1 from flow_node_histories a WHERE assignee_id =
        #{usrId,jdbcType=BIGINT} AND a.flow_id = f.id))
        ORDER BY f.created_dt DESC
      </when>
      <when test="type!=null and type =='01'">
        and exists(select 1 from flow_nodes a WHERE assignee_id = #{usrId,jdbcType=BIGINT} AND a.flow_id = f.id)
        ORDER BY f.created_dt DESC
      </when>
      <otherwise>
        AND exists(select 1 from flow_node_histories a WHERE assignee_id =
        #{usrId,jdbcType=BIGINT} AND a.flow_id = f.id) order by f.created_dt DESC
      </otherwise>
    </choose>
  </select>
  <insert id="addDeliverModelBatch" parameterType="list">
    INSERT INTO link_flow_doc(flow_id, doc_id, file_num, file_type) VALUES
    <foreach collection="list" separator="," index="index" item="item" >
      (#{item.flowId},#{item.docId},#{item.fileNum},#{item.fileType})
    </foreach>
  </insert>
  <sql id="Deliver_Info_List">
    a.file_num as old_file_num,a.new_file_num ,b.id, b.file_name, b.file_num, b.dept_id,b.title, b.doc_attr, b.responsible, b.fonds_id, b.importance,
    b.appendices, b.archive_type, b.deliver_user, b.deliver_dept, b.archive_year, b.reserve_duration,
    b.entity_num, b.file_createtime, b.reserve_location, b.before_num, b.archive_date, b.remark,
    b.record_flag, b.document_local_id, b.document_creatime, b.link_files_id, b.is_archive, b.user_id,
    b.sava_location, b.arrange_flag, b.data_source, b.deliver_date, b.paginal_num, b.updated_dt
  </sql>
  <select id="getTurnOverDocList" resultType="Documents">
    select <include refid="Deliver_Info_List"/> from link_flow_doc a  join documents b on a.doc_id = b.id and a.flow_id = #{flowId} and a.file_type = 'documents' and b.record_flag = '00' ;
  </select>
  <sql id="Deliver_Rec_Info_List">
    a.file_num as old_file_num,a.new_file_num ,b.id, b.dept_id, b.file_num, b.title, b.theme_word, b.responsible, b.fonds_id, b.importance, b.appendices,
    b.archive_type, b.deliver_user, b.deliver_office, b.deliver_dept, b.archive_year, b.reserve_duration,
    b.save_num, b.reserve_location, b.archive_date, b.remark, b.record_flag, b.is_archive, b.user_id,
    b.deliver_date, b.created_dt, b.updated_dt, b.item_num
  </sql>
  <select id="getTurnOverRecList" resultType="Record">
    select <include refid="Deliver_Rec_Info_List"/> from link_flow_doc a join records b on a.doc_id = b.id and a.flow_id=#{flowId} and a.file_type = 'record' and b.record_flag = true;
  </select>
  <select id="getDeliverInfo" resultMap="WithFlowsResultMap">
    select
    <include refid="With_Flows_Column_List"/>
    FROM flow_form_deliver ffd INNER JOIN flows f on f.id=#{flowId} and ffd.flow_id = f.id and f.record_flag = TRUE
    and ffd.record_flag = '00'
  </select>
  <select id="getDuplicateInTurnOver" resultType="java.lang.Long">
    SELECT b.doc_id from flows a JOIN link_flow_doc  b on a.id=b.flow_id and a.status='IN_PROCESS' and b.file_type=#{fileType}
    and b.doc_id in
    <foreach collection="docIds" item="id" open="(" close=")" separator=",">
    #{id}
  </foreach>
  </select>
  <update id="updateNewFileNum">
    UPDATE link_flow_doc SET new_file_num = #{newFileNum} where flow_id = #{flowId} and doc_id = #{docId} and file_type =#{fileType}
  </update>

</mapper>